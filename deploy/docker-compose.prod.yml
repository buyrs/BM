version: '3.8'

services:
  # PHP Application
  app:
    build:
      context: .
      dockerfile: deploy/Dockerfile
      args:
        - APP_ENV=production
    container_name: bm-app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
      - ./storage:/var/www/html/storage
      - ./bootstrap/cache:/var/www/html/bootstrap/cache
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - LOG_CHANNEL=stderr
    networks:
      - bm-network
    depends_on:
      - db
      - redis

  # Nginx Web Server
  webserver:
    image: nginx:1.25-alpine
    container_name: bm-webserver
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - .:/var/www/html
      - ./deploy/nginx.conf:/etc/nginx/nginx.conf
      - ./deploy/ssl:/etc/nginx/ssl
    networks:
      - bm-network
    depends_on:
      - app

  # MySQL Database
  db:
    image: mysql:8.0
    container_name: bm-db
    restart: unless-stopped
    environment:
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    volumes:
      - dbdata:/var/lib/mysql
      - ./deploy/mysql.cnf:/etc/mysql/conf.d/custom.cnf
    networks:
      - bm-network
    command: --default-authentication-plugin=mysql_native_password

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: bm-redis
    restart: unless-stopped
    volumes:
      - redisdata:/data
    networks:
      - bm-network
    command: redis-server --appendonly yes

  # Queue Worker
  queue:
    build:
      context: .
      dockerfile: deploy/Dockerfile
    container_name: bm-queue
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
      - ./storage:/var/www/html/storage
      - ./bootstrap/cache:/var/www/html/bootstrap/cache
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
    command: php artisan queue:work --sleep=3 --tries=3
    networks:
      - bm-network
    depends_on:
      - db
      - redis

  # Scheduler
  scheduler:
    build:
      context: .
      dockerfile: deploy/Dockerfile
    container_name: bm-scheduler
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
      - ./storage:/var/www/html/storage
      - ./bootstrap/cache:/var/www/html/bootstrap/cache
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
    command: php artisan schedule:work
    networks:
      - bm-network
    depends_on:
      - db
      - redis

volumes:
  dbdata:
    driver: local
  redisdata:
    driver: local

networks:
  bm-network:
    driver: bridge